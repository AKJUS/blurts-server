name: Deploy Preview

on: 
  pull_request:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT }}
  SERVICE: blurts-server
  REGION: us-east4
  TAG: run-${{ github.run_id }}
  DB_HOST: ${{ secrets.PREVIEW_DB_HOST }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v4
      with:
        node-version: 20.12
    - name: Install dependencies
      run: npm ci
    - name: Copy env var
      run: cp .env-dist .env
    - name: Setting up postgres
      run: npm run db:migrate
      env:
        DATABASE_URL: postgres://postgres@${{ env.DB_HOST }}:5432/blurts

    - name: Setup Cloud SDK
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
  
    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: Authorize Docker push
      run: |-
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

    - name: Build and Push Container
      run: |-
        docker build -t ${{env.REGION}}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ env.TAG }} .
        docker push ${{env.REGION}}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ env.TAG }}
        
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE }}
        image: ${{env.REGION}}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ env.TAG }}
        region: ${{ env.REGION }}
        flags: "--allow-unauthenticated"
        tag: ${{ env.TAG }}
        env_vars: |
          NEXTAUTH_SECRET: secret

    - name: 'Use output'
      run: 'curl "${{ steps.deploy.outputs.url }}"'